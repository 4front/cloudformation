{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "AWS CloudFormation template for 4front multi-tenant platform",

  "Parameters": {
    "ApplicationName": {
      "Type": "String",
      "Description": "The name of the 4front Elastic Beanstalk application",
      "Default": "4front-platform"
    },

    "EnvironmentName": {
      "Type": "String",
      "Description": "The name of the ElasticBeanstalk Environment"
    },

    "VirtualHost": {
      "Type": "String",
      "Description": "The virtual hostname that will be used to access 4front, i.e. webapp.company.net"
    },
    "VPCId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "The VPC where the 4front instance should reside"
    },

    "IamInstanceProfile": {
      "Type": "String",
      "Description": "The IAM instance profile the ElasticBeanstalk app should run as"
    },

    "AssociatePublicIpAddress": {
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "false",
      "Description": "Launch instances with public IP addresses in your VPC"
    },

    "ELBScheme": {
      "Type": "String",
      "AllowedValues": ["internal", ""],
      "Default": "internal",
      "Description": "Specify internal if you want to create an internal load balancer in your VPC so that your Elastic Beanstalk application cannot be accessed from outside your VPC."
    },

    "SecurityGroupIds": {
      "Type": "List<AWS::EC2::SecurityGroup::Id>",
      "Description": "The SecurityGroup the 4front instance should utilize"
    },

    "ELBSubnet": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The Subnet for the ELB"
    },

    "EC2Subnet": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The Subnet for the EC2 instances"
    },

    "EC2KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "RedisHost": {
      "Description": "The name of the Redis host this 4front instance will talk to",
      "Type": "String"
    },
    "CacheVirtualApps": {
      "Description": "Specify if virtual apps should be cached in Redis.",
      "Type": "Number",
      "Default": 0
    },
    "AwsRegion": {
      "Description": "The AWS region the instance is running",
      "Type": "String",
      "Default": "us-west-2"
    },
    "DefaultVirtualEnvironment": {
      "Description": "The default virtual environment if none is specified in the URL",
      "Type": "String",
      "Default": "production"
    },
    "DeployedAssetsPath": {
      "Description": "The path to deployed assets. Could be an absolute CDN url or a relative S3 folder",
      "Type": "String"
    },
    "S3DeploymentsBucket": {
      "Description": "The name of the S3 bucket where virtual app assets are deployed",
      "Type": "String"
    },
    "S3DeploymentsKeyPrefix": {
      "Description": "Optional S3 key prefix that defines the path where deployed assets are stored in the S3DeploymentsBucket. If blank, they will be written to the root of the bucket.",
      "Type": "String",
      "Default": ""
    },
    "LdapUrl": {
      "Description": "The URL of the LDAP server, i.e. ldap://ldap.company.net",
      "Type": "String"
    },
    "LdapBaseDN": {
      "Description": "The base distinguished name for the LDAP server",
      "Type": "String"
    },
    "LdapUsersDN": {
      "Description": "The LDAP distinguished name for users, i.e. ou=users,ou=accounts,dc=company,dc=net",
      "Type": "String"
    },
    "LdapGroupsDN": {
      "Description": "The LDAP distinguished name for groups, i.e. ou=groups,ou=accounts,dc=company,dc=net",
      "Type": "String"
    },
    "LdapUsernamePrefix": {
      "Description": "The prefix usernames must have to invoke the bind operation, i.e. corp/ (including trailing slash)",
      "Type": "String",
      "Default": ""
    },
    "JwtTokenExpires": {
      "Description": "The number of minutes before a newly issued JWT will expire",
      "Type": "Number",
      "Default": 60
    },
    "SessionTimeout": {
      "Description": "The number of minutes that portal login sessions are valid",
      "Type": "Number",
      "Default": 1440
    }
  },

  "Resources": {
    "ElasticBeanstalkEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": {
          "Ref": "ApplicationName"
        },
        "EnvironmentName": {
          "Ref": "EnvironmentName"
        },
        "Description": "4front ElasticBeanstalk environment",
        "SolutionStackName": "64bit Amazon Linux 2015.03 v2.0.0 running Node.js",
        "OptionSettings": [{
          "Namespace": "aws:elasticbeanstalk:environment",
          "OptionName": "EnvironmentType",
          "Value": "LoadBalanced"
        }, {
          "Namespace": "aws:autoscaling:launchconfiguration",
          "OptionName": "SecurityGroups",
          "Value": {
            "Fn::Join": [",", {
              "Ref": "SecurityGroupIds"
            }]
          }
        }, {
          "Namespace": "aws:autoscaling:launchconfiguration",
          "OptionName": "EC2KeyName",
          "Value": {
            "Ref": "EC2KeyName"
          }
        }, {
          "Namespace": "aws:autoscaling:launchconfiguration",
          "OptionName": "IamInstanceProfile",
          "Value": {
            "Ref": "IamInstanceProfile"
          }
        }, {
          "Namespace": "aws:ec2:vpc",
          "OptionName": "VPCId",
          "Value": {
            "Ref": "VPCId"
          }
        }, {
          "Namespace": "aws:ec2:vpc",
          "OptionName": "AssociatePublicIpAddress",
          "Value": {
            "Ref": "AssociatePublicIpAddress"
          }
        }, {
          "Namespace": "aws:ec2:vpc",
          "OptionName": "ELBScheme",
          "Value": {
            "Ref": "ELBScheme"
          }
        }, {
          "Namespace": "aws:ec2:vpc",
          "OptionName": "Subnets",
          "Value": {
            "Fn::Join": [",", {
              "Ref": "EC2Subnet"
            }]
          }
        }, {
          "Namespace": "aws:ec2:vpc",
          "OptionName": "ELBSubnets",
          "Value": {
            "Fn::Join": [",", {
              "Ref": "ELBSubnet"
            }]
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_VIRTUAL_HOST",
          "Value": {
            "Ref": "VirtualHost"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_REDIS_HOST",
          "Value": {
            "Ref": "RedisHost"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_CACHE_VIRTUAL_APPS",
          "Value": {
            "Ref": "CacheVirtualApps"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "AWS_REGION",
          "Value": {
            "Ref": "AwsRegion"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "NODE_ENV",
          "Value": "production"
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_DEFAULT_ENVIRONMENT",
          "Value": {
            "Ref": "DefaultVirtualEnvironment"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_CRYPTO_PASSWORD",
          "Value": "<UPDATE_ME>"
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_JWT_TOKEN_SECRET",
          "Value": "<UPDATE_ME>"
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_JWT_TOKEN_EXPIRE",
          "Value": {
            "Ref": "JwtTokenExpires"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_SESSION_SECRET",
          "Value": "<UPDATE_ME>"
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_DEPLOYED_ASSETS_PATH",
          "Value": {
            "Ref": "DeployedAssetsPath"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_S3_DEPLOYMENTS_BUCKET",
          "Value": {
            "Ref": "S3DeploymentsBucket"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_S3_DEPLOYMENTS_KEY_PREFIX",
          "Value": {
            "Ref": "S3DeploymentsKeyPrefix"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_LDAP_URL",
          "Value": {
            "Ref": "LdapUrl"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_LDAP_BASE_DN",
          "Value": {
            "Ref": "LdapBaseDN"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_LDAP_USERS_DN",
          "Value": {
            "Ref": "LdapUsersDN"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_LDAP_GROUPS_DN",
          "Value": {
            "Ref": "LdapGroupsDN"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_LDAP_USERNAME_PREFIX",
          "Value": {
            "Ref": "LdapUsernamePrefix"
          }
        }, {
          "Namespace": "aws:elasticbeanstalk:application:environment",
          "OptionName": "FF_SESSION_TIMEOUT",
          "Value": {
            "Ref": "SessionTimeout"
          }
        }]
      }
    }
  }
}
